import database
import string
import random

client = database.connect()["bank"]["crypto_wallets"]

class CryptoWallet:
    def __init__(self, coin, balance):
        self.coin = coin
        self.address = self.generate_address()
        self.balance = balance
        self.transactions = []

    def store_account(self):
        return client.insert_one(self.create_account_object())

    def create_account_object(self):
        return {"coin_id": self.coin, "address": self.address, "balance":self.balance, "transactions": self.transactions}

    @staticmethod
    def generate_address():
        """
        Proof of concept function, in reality an actual wallet will be created for the user.
        It will not be generated by the bank itself using this function.
        There are on average 34 digits in a btc adddress, therefore that length is selected.

        In a real application we would also verify that this address is not taken by looking it up in the database.
        """
        return "".join((random.choice(string.ascii_lowercase) for i in range(34)))
